[{"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js":"1","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js":"2","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js":"3","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js":"4","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js":"5","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js":"6","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js":"7","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js":"8","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js":"9","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js":"10","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js":"11","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js":"12","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js":"13","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js":"14","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js":"15","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js":"16","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js":"17","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\index.js":"18","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Cocktail\\index.js":"19","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\randomCocktail.js":"20","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\ingredients.js":"21","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\categories.js":"22"},{"size":542,"mtime":1650046520618,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1649296760451,"results":"25","hashOfConfig":"24"},{"size":1991,"mtime":1649976344695,"results":"26","hashOfConfig":"24"},{"size":3770,"mtime":1650113667208,"results":"27","hashOfConfig":"24"},{"size":4638,"mtime":1650105541776,"results":"28","hashOfConfig":"24"},{"size":3292,"mtime":1650105541777,"results":"29","hashOfConfig":"24"},{"size":3150,"mtime":1650111727393,"results":"30","hashOfConfig":"24"},{"size":3171,"mtime":1650105541779,"results":"31","hashOfConfig":"24"},{"size":3707,"mtime":1650105541778,"results":"32","hashOfConfig":"24"},{"size":1252,"mtime":1649803120713,"results":"33","hashOfConfig":"24"},{"size":1043,"mtime":1649812740618,"results":"34","hashOfConfig":"24"},{"size":1955,"mtime":1649803120728,"results":"35","hashOfConfig":"24"},{"size":949,"mtime":1649803120729,"results":"36","hashOfConfig":"24"},{"size":4822,"mtime":1650105541772,"results":"37","hashOfConfig":"24"},{"size":4145,"mtime":1650105541773,"results":"38","hashOfConfig":"24"},{"size":3268,"mtime":1650105541774,"results":"39","hashOfConfig":"24"},{"size":3849,"mtime":1649976344703,"results":"40","hashOfConfig":"24"},{"size":3018,"mtime":1650117708046,"results":"41","hashOfConfig":"24"},{"size":475,"mtime":1650105541771,"results":"42","hashOfConfig":"24"},{"size":1908,"mtime":1650105541769,"results":"43","hashOfConfig":"24"},{"size":2962,"mtime":1650046512236,"results":"44","hashOfConfig":"24"},{"size":2767,"mtime":1650106230980,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"zc2zyy",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js",["102"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Workbox } from \"workbox-window\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["103","104"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js",["105"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Homebar from \"./pages/Homebar\";\nimport AwayBar from \"./pages/Awaybar\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Header\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n          {/* <Header /> */}\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/homebar\" element={<Homebar />} />\n              <Route path=\"/awaybar\" element={<AwayBar />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/me\" element={<Profile />} />\n              <Route path=\"/profiles/:username\" element={<Profile />} />\n            </Routes>\n          </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js",["106","107","108","109"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js",["110","111","112","113","114","115","116"],"import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst Home = (props) => {\n  const navigate = useNavigate();\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // // submit form\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   console.log(formState);\n  //   try {\n  //     const { data } = await login({\n  //       variables: { ...formState },\n  //     });\n\n  //     Auth.login(data.login.token);\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n\n  //   // clear form values\n  //   setFormState({\n  //     email: \"\",\n  //     password: \"\",\n  //   });\n  // };\n\n  const logout = (event) => {\n    event.preventDefault();\n    navigate(\"/\");\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${loginBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <Link to=\"/signup\">Sign up</Link>\n                  {\" or \"}\n                  <Link to=\"/login\">log in</Link>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${loginBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n          <img src={logo} />\n        </div>\n        {Auth.loggedIn () && (\n          <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n            <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n              <h4>{Auth.getProfile().data.username}'s profile</h4>\n            </Link>\n            <h4\n              className=\"mx-5 decoration-none text-light\"\n              style={{ cursor: \"pointer\" }}\n              onClick={logout}\n            >\n              Log out\n            </h4>\n          </div>\n        )}\n      </header>\n      <main className=\"flex-column justify-center align-center text-light m-5\">\n        <h1>Where are you?</h1>\n        <div className=\"col-5 text-light \">\n          <div className=\"card float-left w-40\">\n            <div className=\"card-body\">\n              <form>\n                <Link\n                  className=\"btn btn-block\"\n                  style={{ cursor: \"pointer\" }}\n                  Link\n                  to=\"/Homebar\"\n                >\n                  Home\n                </Link>\n              </form>\n            </div>\n          </div>\n          <div className=\"card float-right w-40\">\n            <div className=\"card-body\">\n              <form>\n                <Link\n                  className=\"btn btn-block\"\n                  style={{ cursor: \"pointer\" }}\n                  Link\n                  to=\"/Awaybar\"\n                >\n                  Away\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js",["117","118","119","120","121","122","123","124","125"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport homebar from \"../assets/homebar.png\";\nimport { useQuery } from \"@apollo/client\";\nimport logo from \"../assets/PCLogo.png\";\nimport Auth from \"../utils/auth\";\nimport \"../App\";\nimport Autocomplete from \"../components/Homebar/Autocomplete\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst Homebar = () => {\n  const navigate = useNavigate();\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const logout = (event) => {\n    event.preventDefault();\n    navigate(\"/\");\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${homebar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">Sign up</a>\n                  {\" or \"}\n                  <a href=\"/login\">log in</a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${homebar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n        overflowY: \"scroll\"\n      }}\n    >\n      <main className=\"flex-column justify-center align-center\">\n        <header className=\"text-light flex-column align-center mb-5 p-5\">\n          <div className=\"flex-row justify-center\">\n            <a href=\"/\">\n              <img src={logo} />\n            </a>\n          </div>\n          {Auth.loggedIn() && (\n            <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n              <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n                <h4>{Auth.getProfile().data.username}'s profile</h4>\n              </Link>\n              <h4\n                className=\"mx-5 decoration-none text-light\"\n                style={{ cursor: \"pointer\" }}\n                onClick={logout}\n              >\n                Logout\n              </h4>\n            </div>\n          )}\n        </header>\n        <Autocomplete />\n      </main>\n    </div>\n  );\n};\n\nexport default Homebar;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js",["126","127","128","129","130","131","132","133","134"],"import React, { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/PCLogo.png\";\nimport awayBar from \"../assets/awayBar.jpeg\";\nimport { useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport \"../App\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nimport Auto from \"../components/AwayBar\";\n\nconst Awaybar = () => {\n  const navigate = useNavigate();\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const logout = (event) => {\n    event.preventDefault();\n    navigate(\"/\");\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${awayBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100%\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">Sign up</a>\n                  {\" or \"}\n                  <a href=\"/login\">log in</a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${awayBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100%\",\n      }}\n    >\n      <header className=\"text-light flex-column align-center mb-5 p-5 absolute\">\n        <div className=\"flex-row justify-center\">\n          <a href=\"/\">\n            <img src={logo} />\n          </a>\n        </div>\n        {Auth.loggedIn() && (\n          <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n            <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n              <h4>{Auth.getProfile().data.username}'s profile</h4>\n            </Link>\n            <h4\n              className=\"mx-5 decoration-none text-light\"\n              style={{ cursor: \"pointer\" }}\n              onClick={logout}\n            >\n              Logout\n            </h4>\n          </div>\n        )}\n      </header>\n      <main>\n        <Auto />\n      </main>\n    </div>\n  );\n};\n\nexport default Awaybar;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js",["135","136"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/PCLogo.png';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div\n    className=\"flex-column justify-flex-start\"\n    style={{\n      backgroundImage: `url(${loginBar})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      width: \"100vw\",\n      height: \"100vh\",\n    }}\n  >\n    <main className=\"flex-column justify-center align-center\">\n    <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n        <img src={logo}/>\n        </div>\n          <div className=\"flex-row\">\n            <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n              <h4>Log in</h4>\n            </Link>\n          </div>\n      </header>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"card\">\n          <h1 className=\"card-header text-dark text-center\">Sign Up</h1>\n          <div className=\"card-body\">\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js",["137","138","139"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const navigate = useNavigate();\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    navigate(\"/\");\n    Auth.logout();\n  };\n\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${loginBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <main className=\"flex-column justify-center align-center\">\n        <header className=\"text-light flex-column align-center mb-5 p-5\">\n          <div className=\"flex-row justify-center\">\n            <img src={logo} />\n          </div>\n          {Auth.loggedIn() ? (\n            <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n              <h4\n                className=\"m-2\"\n                style={{ cursor: \"pointer\" }}\n                onClick={logout}\n              >\n                Log out\n              </h4>\n            </div>\n          ) : (\n            <div className=\"flex-row\">\n              <Link className=\"m-2 decoration-none text-light\" to=\"/signup\">\n                <h4>Sign up</h4>\n              </Link>\n            </div>\n          )}\n        </header>\n        <div className=\"col-12 col-lg-4\">\n          <div className=\"card\">\n            <h1 className=\"card-header text-dark text-center\">Login</h1>\n            <div className=\"card-body\">(\n                <form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formState.email}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"******\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={formState.password}\n                    onChange={handleChange}\n                  />\n                  <button\n                    className=\"btn btn-block\"\n                    style={{ cursor: \"pointer\" }}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </button>\n                </form>\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js",["140"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_RECIPE } from \"../../utils/mutations\";\nimport { QUERY_RECIPES, QUERY_ME } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\nconst RecipeForm = () => {\n  // set state\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  // add recipe\n  const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\n    update(cache, { data: { addRecipe } }) {\n      try {\n        const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\n        cache.writeQuery({\n          query: QUERY_RECIPES,\n          data: { recipes: [addRecipe, ...recipes] },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, recipes: [...me.recipes, addRecipe] } },\n      });\n    },\n  });\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addRecipe({\n        variables: {\n          recipeName,\n          ingredients,\n          instructions,\n          recipeAuthor: Auth.getProfile().data.username,\n        },\n      });\n      setRecipeName(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // based on input type, set state for recipeName, ingredient, instructions\n\n    if (inputType === \"recipeName\") {\n      setRecipeName(inputValue);\n    } else if (inputType === \"ingredients\") {\n      setIngredients(inputValue);\n    } else {\n      setInstructions(inputValue);\n    }\n  };\n  return (\n    <div>\n      <h3 className=\"text-light mx-3\">Create your own recipe?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-space-between-md\"\n            onSubmit={handleFormSubmit}\n          >\n            <div style={{ width: \"100%\" }}>\n              <div className=\"col-12 col-lg-11\">\n                <textarea\n                  name=\"recipeName\"\n                  placeholder=\"Here is the name of recipe\"\n                  value={recipeName}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n                <textarea\n                  name=\"ingredients\"\n                  placeholder=\"Here are the ingredients\"\n                  value={ingredients}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n                <textarea\n                  name=\"instructions\"\n                  placeholder=\"Here are the instructions\"\n                  value={instructions}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n              </div>\n\n              <div className=\"col-12 col-lg-11\">\n                <button\n                  className=\"btn btn-sm btn-dark py-3\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Add Recipe\n                </button>\n              </div>\n              {error && (\n                <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to create your recipe. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeForm;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js",["141","142","143"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { REMOVE_RECIPE } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport { QUERY_RECIPES, QUERY_ME } from \"../../utils/queries\";\nimport RecipeEditForm from \"../RecipeEditForm\";\n\nconst CardBody = ({ recipe, handleEditButton, handleDeleteRecipe }) => (\n  <div className=\"card-body p-2\">\n    <p>{recipe.recipeName}</p>\n    <p>ingredients: {recipe.ingredients}</p>\n    <p>instructions: {recipe.instructions}</p>\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <button\n        className=\"btn btn-info\"\n        onClick={() => handleEditButton(recipe._id)}\n      >\n        Edit Recipe\n      </button>\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => handleDeleteRecipe(recipe._id)}\n      >\n        Delete Recipe\n      </button>\n    </div>\n  </div>\n);\n\nconst RecipeList = ({\n  recipes,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  const [isEdit, setIsEdit] = useState();\n  const [removeRecipe, { error }] = useMutation(REMOVE_RECIPE);\n  if (!recipes.length) {\n    return <h1>No Recipes Yet</h1>;\n  }\n\n  const handleDeleteRecipe = async (recipeId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeRecipe({\n        variables: { recipeId },\n        update(cache, { data: { removeRecipe } }) {\n          const { me } = cache.readQuery({ query: QUERY_ME });\n          cache.writeQuery({\n            query: QUERY_ME,\n            data: {\n              me: {\n                ...me,\n                recipes: me.recipes.filter(\n                  (recipe) => recipe._id !== removeRecipe._id\n                ),\n              },\n            },\n          });\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {recipes &&\n        recipes.map((recipe) => (\n          <div key={recipe._id} className=\"card mb-3\">\n            <h3 className=\"card-header text-dark p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/profiles/${recipe.recipeAuthor}`}\n                >\n                  {recipe.recipeAuthor} <br />\n                  <span style={{ fontSize: \"1.35rem\" }}>\n                    created this recipe on {recipe.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: \"1.35rem\" }}>\n                    created this recipe on {recipe.createdAt}\n                  </span>\n                </>\n              )}\n            </h3>\n            {isEdit === recipe._id ? (\n              <RecipeEditForm recipeInfo={recipe} setIsEdit={setIsEdit} />\n            ) : (\n              <CardBody\n                recipe={recipe}\n                handleEditButton={() => setIsEdit(recipe._id)}\n                handleDeleteRecipe={handleDeleteRecipe}\n              />\n            )}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default RecipeList;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js",["144","145"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { UPDATE_RECIPE } from \"../../utils/mutations\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nconst RecipeEditForm = ({ recipeInfo, setIsEdit }) => {\n  // set state\n  const [recipeName, setRecipeName] = useState(recipeInfo.recipeName);\n  const [ingredients, setIngredients] = useState(recipeInfo.ingredients);\n  const [instructions, setInstructions] = useState(recipeInfo.instructions);\n  // add recipe\n  const [updateRecipe, { error }] = useMutation(UPDATE_RECIPE);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await updateRecipe({\n        variables: {\n          recipedId: recipeInfo._id,\n          recipeName,\n          ingredients,\n          instructions,\n        },\n        update(cache, { data: { updateRecipe } }) {\n          const updatedRecipe = {\n            ...updateRecipe,\n            recipeName,\n            ingredients,\n            instructions,\n          };\n          const { me } = cache.readQuery({ query: QUERY_ME });\n          cache.writeQuery({\n            query: QUERY_ME,\n            data: {\n              me: {\n                ...me,\n                recipes: me.recipes.map((recipe) =>\n                  recipe._id === updateRecipe._id ? updatedRecipe : recipe\n                ),\n              },\n            },\n          });\n        },\n      });\n      setRecipeName(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n      setIsEdit(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // based on input type, set state for recipeName, ingredient, instructions\n\n    if (inputType === \"recipeName\") {\n      setRecipeName(inputValue);\n    } else if (inputType === \"ingredients\") {\n      setIngredients(inputValue);\n    } else {\n      setInstructions(inputValue);\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-12 col-lg-9\">\n        <textarea\n          name=\"recipeName\"\n          value={recipeName}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"ingredients\"\n          value={ingredients}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"instructions\"\n          placeholder=\"Here is the instructions\"\n          value={instructions}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n      </div>\n      <div>\n        <button\n          className=\"btn btn-primary btn-block py-3 \"\n          onClick={handleFormSubmit}\n        >\n          Update Changes\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeEditForm;\n\n// , {\n//     update(cache, { data: { addRecipe } }) {\n//       try {\n//         const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\n//         cache.writeQuery({\n//           query: QUERY_RECIPES,\n//           data: { recipes: [updateRecipe, ...recipes] },\n//         });\n//       } catch (e) {\n//         console.log(e);\n//       }\n//       // update me object's cache\n//       const { me } = cache.readQuery({ query: QUERY_ME });\n//       cache.writeQuery({\n//         query: QUERY_ME,\n//         data: {\n//           me: {\n//             ...me,\n//             recipes: me.recipes.map((recipe) =>\n//               recipe._id === recipeInfo._id ? updateRecipe : recipe\n//             ),\n//           },\n//         },\n//       });\n//     },\n//   }\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\index.js",["146","147"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Cocktail\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\randomCocktail.js",["148","149","150"],"import React, { useEffect, useState, useRef } from \"react\";\n\nexport default function RandomDrink() {\n    function getRandomCocktail() {\n      fetch(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\n        .then(function (response) {\n          if (response.status !== 200) {\n            console.log(\"Problemo\" + response.status);\n            return;\n          }\n          response.json().then(function (data) {\n            displayRandomCocktail(data);\n          });\n        })\n        .catch(function (err) {\n          console.log(\"Fetch Error :-5\", err);\n        });\n    }\n      function displayRandomCocktail(cocktail) {\n      console.log(cocktail.drinks[0].strDrink); \n  \n      let drinkSection = document.querySelector(\"#drink-section\"); \n      let drinkName = document.createElement(\"h2\"); \n      drinkName.innerHTML = cocktail.drinks[0].strDrink; \n  \n      drinkSection.appendChild(drinkName); \n  \n      let img = document.createElement(\"img\");\n      img.src = cocktail.drinks[0].strDrinkThumb + '/preview';\n  \n      for (let i = 1; i < 16; i++) {\n        if (cocktail.drinks[0][`strIngredient${i}`] == null) {\n          break;\n        }\n        let ingredient = document.createElement(\"li\"); // Ingredients listed as list elements\n        ingredient.innerHTML =\n          cocktail.drinks[0][`strMeasure${i}`] + \n          \":\" +\n          cocktail.drinks[0][`strIngredient${i}`];\n  \n        drinkSection.appendChild(ingredient); // Ingredients added to section\n      }\n    }\n  \n    return (\n      <div>\n        <div style={{marginTop: '1rem'}} className=\"row\">\n        <h1 className=\"col-lg-3\">Click for Randomly Generated Cocktail</h1>\n        <button style={{borderRadius: 5, backgroundColor: 'black', color: 'white'}} onClick={getRandomCocktail}>Random Cocktail</button>\n        <section style={{marginLeft: '0.8rem'}} id=\"drink-section\"></section>\n        </div>\n\n      </div>\n    );\n  }\n  ","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\ingredients.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\AwayBar\\categories.js",[],{"ruleId":"151","severity":1,"message":"152","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":17},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"151","severity":1,"message":"159","line":16,"column":8,"nodeType":"153","messageId":"154","endLine":16,"endColumn":14},{"ruleId":"151","severity":1,"message":"160","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"161","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":21},{"ruleId":"151","severity":1,"message":"162","line":9,"column":32,"nodeType":"153","messageId":"154","endLine":9,"endColumn":45},{"ruleId":"163","severity":1,"message":"164","line":89,"column":13,"nodeType":"165","endLine":89,"endColumn":31},{"ruleId":"151","severity":1,"message":"162","line":3,"column":32,"nodeType":"153","messageId":"154","endLine":3,"endColumn":45},{"ruleId":"151","severity":1,"message":"161","line":11,"column":10,"nodeType":"153","messageId":"154","endLine":11,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":17,"column":11,"nodeType":"153","messageId":"154","endLine":17,"endColumn":18},{"ruleId":"151","severity":1,"message":"167","line":23,"column":10,"nodeType":"153","messageId":"154","endLine":23,"endColumn":15},{"ruleId":"151","severity":1,"message":"168","line":23,"column":19,"nodeType":"153","messageId":"154","endLine":23,"endColumn":24},{"ruleId":"151","severity":1,"message":"169","line":26,"column":9,"nodeType":"153","messageId":"154","endLine":26,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":107,"column":11,"nodeType":"165","endLine":107,"endColumn":29},{"ruleId":"151","severity":1,"message":"170","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":18},{"ruleId":"151","severity":1,"message":"162","line":5,"column":32,"nodeType":"153","messageId":"154","endLine":5,"endColumn":45},{"ruleId":"151","severity":1,"message":"161","line":13,"column":10,"nodeType":"153","messageId":"154","endLine":13,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":19,"column":11,"nodeType":"153","messageId":"154","endLine":19,"endColumn":18},{"ruleId":"151","severity":1,"message":"171","line":24,"column":10,"nodeType":"153","messageId":"154","endLine":24,"endColumn":19},{"ruleId":"151","severity":1,"message":"172","line":24,"column":21,"nodeType":"153","messageId":"154","endLine":24,"endColumn":33},{"ruleId":"151","severity":1,"message":"167","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":15},{"ruleId":"151","severity":1,"message":"168","line":25,"column":19,"nodeType":"153","messageId":"154","endLine":25,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":81,"column":15,"nodeType":"165","endLine":81,"endColumn":33},{"ruleId":"151","severity":1,"message":"170","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"151","severity":1,"message":"162","line":5,"column":32,"nodeType":"153","messageId":"154","endLine":5,"endColumn":45},{"ruleId":"151","severity":1,"message":"161","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":20,"column":11,"nodeType":"153","messageId":"154","endLine":20,"endColumn":18},{"ruleId":"151","severity":1,"message":"171","line":25,"column":10,"nodeType":"153","messageId":"154","endLine":25,"endColumn":19},{"ruleId":"151","severity":1,"message":"172","line":25,"column":21,"nodeType":"153","messageId":"154","endLine":25,"endColumn":33},{"ruleId":"151","severity":1,"message":"167","line":26,"column":10,"nodeType":"153","messageId":"154","endLine":26,"endColumn":15},{"ruleId":"151","severity":1,"message":"168","line":26,"column":19,"nodeType":"153","messageId":"154","endLine":26,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":80,"column":13,"nodeType":"165","endLine":80,"endColumn":31},{"ruleId":"151","severity":1,"message":"173","line":15,"column":28,"nodeType":"153","messageId":"154","endLine":15,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":56,"column":9,"nodeType":"165","endLine":56,"endColumn":26},{"ruleId":"151","severity":1,"message":"161","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":21},{"ruleId":"151","severity":1,"message":"173","line":13,"column":26,"nodeType":"153","messageId":"154","endLine":13,"endColumn":30},{"ruleId":"163","severity":1,"message":"164","line":67,"column":13,"nodeType":"165","endLine":67,"endColumn":31},{"ruleId":"151","severity":1,"message":"173","line":37,"column":15,"nodeType":"153","messageId":"154","endLine":37,"endColumn":19},{"ruleId":"151","severity":1,"message":"162","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":23},{"ruleId":"151","severity":1,"message":"168","line":44,"column":26,"nodeType":"153","messageId":"154","endLine":44,"endColumn":31},{"ruleId":"151","severity":1,"message":"173","line":57,"column":15,"nodeType":"153","messageId":"154","endLine":57,"endColumn":19},{"ruleId":"151","severity":1,"message":"168","line":13,"column":26,"nodeType":"153","messageId":"154","endLine":13,"endColumn":31},{"ruleId":"151","severity":1,"message":"173","line":17,"column":15,"nodeType":"153","messageId":"154","endLine":17,"endColumn":19},{"ruleId":"151","severity":1,"message":"174","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"175","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"174","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"176","line":1,"column":28,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"175","line":1,"column":38,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},"no-unused-vars","'Workbox' is defined but never used.","Identifier","unusedVar","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"'Header' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'QUERY_RECIPES' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","'login' is assigned a value but never used.","'error' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Navigate' is defined but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]