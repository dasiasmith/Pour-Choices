[{"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js":"1","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js":"2","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js":"3","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js":"4","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js":"5","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js":"6","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js":"7","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js":"8","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js":"9","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js":"10","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js":"11","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeBook\\RecipeBook.js":"12","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js":"13","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js":"14","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js":"15","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js":"16","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js":"17","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js":"18"},{"size":500,"mtime":1649296760447,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1649296760451,"results":"21","hashOfConfig":"20"},{"size":1991,"mtime":1649976344695,"results":"22","hashOfConfig":"20"},{"size":4308,"mtime":1649979781075,"results":"23","hashOfConfig":"20"},{"size":4860,"mtime":1649976344707,"results":"24","hashOfConfig":"20"},{"size":3973,"mtime":1649976344708,"results":"25","hashOfConfig":"20"},{"size":5005,"mtime":1649976344707,"results":"26","hashOfConfig":"20"},{"size":3368,"mtime":1649976344709,"results":"27","hashOfConfig":"20"},{"size":3803,"mtime":1649976344708,"results":"28","hashOfConfig":"20"},{"size":1252,"mtime":1649803120713,"results":"29","hashOfConfig":"20"},{"size":1043,"mtime":1649812740618,"results":"30","hashOfConfig":"20"},{"size":4845,"mtime":1649976344705,"results":"31","hashOfConfig":"20"},{"size":1955,"mtime":1649803120728,"results":"32","hashOfConfig":"20"},{"size":949,"mtime":1649803120729,"results":"33","hashOfConfig":"20"},{"size":4606,"mtime":1649976344702,"results":"34","hashOfConfig":"20"},{"size":4144,"mtime":1649976344704,"results":"35","hashOfConfig":"20"},{"size":3291,"mtime":1649976344705,"results":"36","hashOfConfig":"20"},{"size":3849,"mtime":1649976344703,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zc2zyy",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js",["81"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Homebar from \"./pages/Homebar\";\nimport AwayBar from \"./pages/Awaybar\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Header\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n          {/* <Header /> */}\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/homebar\" element={<Homebar />} />\n              <Route path=\"/awaybar\" element={<AwayBar />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/me\" element={<Profile />} />\n              <Route path=\"/profiles/:username\" element={<Profile />} />\n            </Routes>\n          </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js",["82","83","84","85"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js",["86","87","88","89","90","91"],"\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\n\nconst Home = (props) => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // // submit form\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   console.log(formState);\n  //   try {\n  //     const { data } = await login({\n  //       variables: { ...formState },\n  //     });\n\n  //     Auth.login(data.login.token);\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n\n  //   // clear form values\n  //   setFormState({\n  //     email: \"\",\n  //     password: \"\",\n  //   });\n  // };\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${loginBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">\n                    Sign up\n                  </a>{\" or \"}\n                  <a href=\"/login\">\n                    log in\n                    </a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${loginBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n          <img src={logo} />\n        </div>\n        {Auth.loggedIn() ? (\n          <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n            <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n              <h5>{Auth.getProfile().data.username}'s profile</h5>\n            </Link>\n            <h5\n              className=\"mx-5 decoration-none text-light\"\n              style={{ cursor: \"pointer\" }}\n              onClick={logout}\n            >\n              Log out\n            </h5>\n          </div>\n        ) : (\n          <div className=\"flex-row\">\n            <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n              <h5>Login</h5>\n            </Link>\n            <Link className=\" m-2 decoration-none text-light\" to=\"/signup\">\n              <h5>Signup</h5>\n            </Link>\n          </div>\n        )}\n      </header>\n      <main className=\"flex-column justify-center align-center text-light m-5\">\n        <h1>Where are you?</h1>\n        <div className=\"col-5 text-light \">\n          <div className=\"card float-left w-40\">\n            <div className=\"card-body\">\n              <form>\n                <Link\n                  className=\"btn btn-block\"\n                  style={{ cursor: \"pointer\" }}\n                  Link to=\"/Homebar\"\n                >\n                  Home\n                </Link>\n              </form>\n            </div>\n          </div>\n          <div className=\"card float-right w-40\">\n            <div className=\"card-body\">\n              <form>\n                <Link\n                  className=\"btn btn-block\"\n                  style={{ cursor: \"pointer\" }}\n                  Link to=\"/Awaybar\"\n                >\n                  Away\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js",["92","93","94","95","96","97","98","99"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport homeBar from \"../assets/homebar.png\";\nimport { useQuery } from \"@apollo/client\";\nimport logo from \"../assets/PCLogo.png\";\nimport Auth from \"../utils/auth\";\nimport \"../App\";\n// import RecipeBook from \"../components/RecipeBook/RecipeBook\";\nimport Autocomplete from \"../components/Homebar/Autocomplete\";\n// import  Autocomplete  from '../components/Homebar/Autocomplete';\n// import { useQuery } from \"@apollo/client\";\n\nconst Homebar = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${homeBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">Sign up</a>\n                  {\" or \"}\n                  <a href=\"/login\">log in</a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${homeBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        minheight: \"100vh\",\n      }}\n    >\n      <main className=\"flex-column justify-center align-center\">\n        <header className=\"text-light flex-column align-center mb-5 p-5\">\n          <div className=\"flex-row justify-center\">\n            <a href=\"/\">\n              <img src={logo} />\n            </a>\n          </div>\n          {Auth.loggedIn() ? (\n            <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n              <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n                <h5>{Auth.getProfile().data.username}'s profile</h5>\n              </Link>\n              <h5\n                className=\"mx-5 decoration-none text-light\"\n                style={{ cursor: \"pointer\" }}\n                onClick={logout}\n              >\n                Logout\n              </h5>\n            </div>\n          ) : (\n            <div className=\"flex-row\">\n              <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n                <h5>Login</h5>\n              </Link>\n              <Link className=\" m-2 decoration-none text-light\" to=\"/signup\">\n                <h5>Signup</h5>\n              </Link>\n            </div>\n          )}\n        </header>\n        {/* <RecipeBook/> */}\n        <Autocomplete />\n      </main>\n    </div>\n  );\n};\n\nexport default Homebar;\n\n// HOMEBAR\n//       <main className=\"flex-row align-center min-100-vh\">\n//       <header className=\"text-light\">\n//         Select your ingredients\n//       </header> <br></br>\n//       <div className=\"center\">\n//     <Autocomplete />\n//     </div>\n//     </main>\n//   </div>\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js",["100","101","102","103","104","105","106","107"],"import React, { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/PCLogo.png\";\nimport awayBar from \"../assets/awayBar.jpeg\";\nimport { useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport \"../App\";\nimport RecipeBook from \"../components/RecipeBook/RecipeBook\";\n\nconst Awaybar = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${awayBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">Sign up</a>\n                  {\" or \"}\n                  <a href=\"/login\">log in</a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${awayBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        minheight:\"100vh\",\n      }}\n    >\n      <main className=\"flex-column justify-center align-center\">\n        <header className=\"text-light flex-column align-center mb-5 p-5\">\n          <div className=\"flex-row justify-center\">\n            <a href=\"/\">\n              <img src={logo} />\n            </a>\n          </div>\n          {Auth.loggedIn() ? (\n            <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n              <Link className=\"m-2 mx-5 decoration-none text-light\" to=\"/me\">\n                <h5>{Auth.getProfile().data.username}'s profile</h5>\n              </Link>\n              <h5\n                className=\"mx-5 decoration-none text-light\"\n                style={{ cursor: \"pointer\" }}\n                onClick={logout}\n              >\n                Logout\n              </h5>\n            </div>\n          ) : (\n            <div className=\"flex-row\">\n              <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n                <h5>Login</h5>\n              </Link>\n              <Link className=\" m-2 decoration-none text-light\" to=\"/signup\">\n                <h5>Signup</h5>\n              </Link>\n            </div>\n          )}\n        </header>\n        <RecipeBook/>\n        </main>\n        </div>\n    );\n};\n\nexport default Awaybar;\n\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n\n// export default function Awaybar(){\n//   function getRandomCocktail(){\n//       fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n//       .then(\n//           function(response){\n//               if (response.status !== 200){\n//                   console.log('Problemo'+ response.status);\n//                   return;\n//               }\n//               response.json().then(function(data) {\n//                   // console.log(data);\n//                   displayRandomCocktail(data);\n//               });\n//           }\n//       )\n//       .catch(function(err) {\n//           console.log('Fetch Error :-5', err)\n//       })\n//   }\n//       function displayRandomCocktail(cocktail){\n//           console.log(cocktail.drinks[0].strDrink) //Gives just drink name\n\n//           let drinkSection = document.querySelector('#drink-section');\n//           let drinkName = document.createElement('h2');\n//           drinkName.innerHTML = cocktail.drinks[0].strDrink\n\n//           drinkSection.appendChild(drinkName)\n\n//           let img = document.createElement('img');\n//           img.src = cocktail.drinks[0].strDrinkThumb;\n\n//           drinkSection.appendChild(img);\n//       }\n\n//     return(\n//         <div>\n//             <button onClick={getRandomCocktail}>Click Me</button>\n//             <section style={{ color: \"white\" }} id=\"drink-section\"></section>\n//         </div>\n        \n//     )\n// }\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js",["108"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/PCLogo.png';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div\n    className=\"flex-column justify-flex-start\"\n    style={{\n      backgroundImage: `url(${loginBar})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      width: \"100vw\",\n      height: \"100vh\",\n    }}\n  >\n    <main className=\"flex-column justify-center align-center\">\n    <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n        <img src={logo}/>\n        </div>\n          <div className=\"flex-row\">\n            <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n              <h5>Log in</h5>\n            </Link>\n          </div>\n      </header>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"card\">\n          <h1 className=\"card-header text-dark text-center\">Sign Up</h1>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js",["109"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${loginBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <main className=\"flex-column justify-center align-center\">\n        <header className=\"text-light flex-column align-center mb-5 p-5\">\n          <div className=\"flex-row justify-center\">\n            <img src={logo} />\n          </div>\n          {Auth.loggedIn() ? (\n            <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n              <h5\n                className=\"m-2\"\n                style={{ cursor: \"pointer\" }}\n                onClick={logout}\n              >\n                Log out\n              </h5>\n            </div>\n          ) : (\n            <div className=\"flex-row\">\n              <Link className=\"m-2 decoration-none text-light\" to=\"/signup\">\n                <h5>Sign up</h5>\n              </Link>\n            </div>\n          )}\n        </header>\n        <div className=\"col-12 col-lg-4\">\n          <div className=\"card\">\n            <h1 className=\"card-header text-dark text-center\">Login</h1>\n            <div className=\"card-body\">\n              {data ? (\n                <p>\n                  Success! You may now head{\" \"}\n                  <Link to=\"/\">back to the homepage.</Link>\n                </p>\n              ) : (\n                <form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={formState.email}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"******\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={formState.password}\n                    onChange={handleChange}\n                  />\n                  <button\n                    className=\"btn btn-block\"\n                    style={{ cursor: \"pointer\" }}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </button>\n                </form>\n              )}\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeBook\\RecipeBook.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js",["110","111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n  const [data, setData] = useState([]);\n  const [drinkid, setDrinkid] = useState([]);\n  const [list, setList] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [singleDrink, setSingleDrink] = useState([])\n\n  //get list of ingredients for the user\n  useEffect(() => {\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\")\n      .then((res) => res.json())\n      .then((data) => {\n        let newData = data.drinks;\n        newData = newData.map((ele) => {\n          const title = ele.strIngredient1;\n          return { title: title };\n        });\n        setData(newData);\n      });\n  }, []);\n  console.log(\"my selected: \", selected);\n  //fetch a list based on the selected ingredients\n  const fetchList = () => {\n    const query = selected.map((element) => element.title).join();\n    console.log(\"query ===\", query);\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v2/9973533/filter.php?i=${query}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        let newData2 = data.drinks;\n        console.log(newData2);\n        if (newData2.length && newData2 !== \"None Found\") {\n          setList(newData2);\n        } else {\n          setList([]);\n        }\n      });\n  };\n  console.log(list);\n  const fetchRecipe = (id) => {\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v2/9973533/lookup.php?i=${id}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setIsFetched(true)\n        let newData3 = data.drinks[0];\n        setSingleDrink(newData3)\n        //console.log(newData3);\n      });\n  };\n\n  return (\n    <>\n      <Autocomplete\n        multiple\n        id=\"checkboxes-tags-demo\"\n        options={data}\n        onChange={(e, newValue) => {\n          console.log(newValue);\n          setSelected(newValue);\n        }}\n        onClose={(e) => {\n          fetchList();\n        }}\n        disableCloseOnSelect\n        getOptionLabel={(option) => option.title}\n        renderOption={(props, option, { selected }) => (\n          <li {...props}>\n            <Checkbox\n              icon={icon}\n              checkedIcon={checkedIcon}\n              style={{ marginRight: 8 }}\n              checked={selected}\n            />\n            {option.title}\n          </li>\n        )}\n        style={{ width: 500, background: 'white' }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Checkboxes\" placeholder=\"Favorites\" />\n        )}\n      />\n\n      <div className=\"row\">\n        {list.length > 0 ? (\n          list.map((e) => (\n            <div key={e.idDrink} style={{ cursor: 'pointer'}}>\n              <p style={{color: 'white'}}> {e.strDrink} </p>\n                <img\n                  src={e.strDrinkThumb}\n                  onClick={() => fetchRecipe(e.idDrink)}\n                  alt=\"alt\"\n                  width=\"40px\"\n                  height=\"40px\"\n                />\n             \n            </div>\n          ))\n          \n        ) : (\n          <div>\n            <p style={{ color: \"white\" }}>no data</p>\n          </div>\n        )}\n      </div>\n      {\n        isFetched && <div style={{color: 'white'}}>\n        <h2>Ingredients</h2>\n        <ul>\n          <li>{ singleDrink.strIngredient1 } : { singleDrink.strMeasure1 }</li>\n          <li>{ singleDrink.strIngredient2 } : { singleDrink.strMeasure2 }</li>\n          <li>{ singleDrink.strIngredient3 } : { singleDrink.strMeasure3 }</li>\n          <li>{ singleDrink.strIngredient4 } : { singleDrink.strMeasure4 }</li>\n          <li>{ singleDrink.strIngredient5 } : { singleDrink.strMeasure5 }</li>\n          <li>{ singleDrink.strIngredient6 } : { singleDrink.strMeasure6 }</li>\n          <li>{ singleDrink.strIngredient7 } : { singleDrink.strMeasure7 }</li>\n          <li>{ singleDrink.strIngredient8 } : { singleDrink.strMeasure8 }</li>\n          <li>{ singleDrink.strIngredient9 } : { singleDrink.strMeasure9 }</li>\n        </ul>\n        <p><b>Instructions:</b> { singleDrink.strInstructions }</p>\n      </div>\n      } \n    </>\n  );\n}\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js",["114"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js",["115","116","117"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js",["118","119"],{"ruleId":"120","severity":1,"message":"121","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":21},{"ruleId":"120","severity":1,"message":"126","line":9,"column":32,"nodeType":"122","messageId":"123","endLine":9,"endColumn":45},{"ruleId":"127","severity":1,"message":"128","line":90,"column":13,"nodeType":"129","endLine":90,"endColumn":31},{"ruleId":"120","severity":1,"message":"126","line":4,"column":32,"nodeType":"122","messageId":"123","endLine":4,"endColumn":45},{"ruleId":"120","severity":1,"message":"130","line":16,"column":11,"nodeType":"122","messageId":"123","endLine":16,"endColumn":18},{"ruleId":"120","severity":1,"message":"131","line":22,"column":10,"nodeType":"122","messageId":"123","endLine":22,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":22,"column":19,"nodeType":"122","messageId":"123","endLine":22,"endColumn":24},{"ruleId":"120","severity":1,"message":"133","line":25,"column":9,"nodeType":"122","messageId":"123","endLine":25,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":108,"column":11,"nodeType":"129","endLine":108,"endColumn":29},{"ruleId":"120","severity":1,"message":"134","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":5,"column":32,"nodeType":"122","messageId":"123","endLine":5,"endColumn":45},{"ruleId":"120","severity":1,"message":"130","line":20,"column":11,"nodeType":"122","messageId":"123","endLine":20,"endColumn":18},{"ruleId":"120","severity":1,"message":"135","line":25,"column":10,"nodeType":"122","messageId":"123","endLine":25,"endColumn":19},{"ruleId":"120","severity":1,"message":"136","line":25,"column":21,"nodeType":"122","messageId":"123","endLine":25,"endColumn":33},{"ruleId":"120","severity":1,"message":"131","line":26,"column":10,"nodeType":"122","messageId":"123","endLine":26,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":26,"column":19,"nodeType":"122","messageId":"123","endLine":26,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":80,"column":15,"nodeType":"129","endLine":80,"endColumn":33},{"ruleId":"120","severity":1,"message":"134","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":5,"column":32,"nodeType":"122","messageId":"123","endLine":5,"endColumn":45},{"ruleId":"120","severity":1,"message":"130","line":17,"column":11,"nodeType":"122","messageId":"123","endLine":17,"endColumn":18},{"ruleId":"120","severity":1,"message":"135","line":22,"column":10,"nodeType":"122","messageId":"123","endLine":22,"endColumn":19},{"ruleId":"120","severity":1,"message":"136","line":22,"column":21,"nodeType":"122","messageId":"123","endLine":22,"endColumn":33},{"ruleId":"120","severity":1,"message":"131","line":23,"column":10,"nodeType":"122","messageId":"123","endLine":23,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":23,"column":19,"nodeType":"122","messageId":"123","endLine":23,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":78,"column":15,"nodeType":"129","endLine":78,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":56,"column":9,"nodeType":"129","endLine":56,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":64,"column":13,"nodeType":"129","endLine":64,"endColumn":31},{"ruleId":"120","severity":1,"message":"137","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":17},{"ruleId":"120","severity":1,"message":"138","line":13,"column":19,"nodeType":"122","messageId":"123","endLine":13,"endColumn":29},{"ruleId":"120","severity":1,"message":"139","line":16,"column":10,"nodeType":"122","messageId":"123","endLine":16,"endColumn":15},{"ruleId":"120","severity":1,"message":"140","line":16,"column":17,"nodeType":"122","messageId":"123","endLine":16,"endColumn":25},{"ruleId":"120","severity":1,"message":"141","line":37,"column":15,"nodeType":"122","messageId":"123","endLine":37,"endColumn":19},{"ruleId":"120","severity":1,"message":"126","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":23},{"ruleId":"120","severity":1,"message":"132","line":44,"column":26,"nodeType":"122","messageId":"123","endLine":44,"endColumn":31},{"ruleId":"120","severity":1,"message":"141","line":57,"column":15,"nodeType":"122","messageId":"123","endLine":57,"endColumn":19},{"ruleId":"120","severity":1,"message":"132","line":13,"column":26,"nodeType":"122","messageId":"123","endLine":13,"endColumn":31},{"ruleId":"120","severity":1,"message":"141","line":17,"column":15,"nodeType":"122","messageId":"123","endLine":17,"endColumn":19},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useLocation' is defined but never used.","'QUERY_RECIPES' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","'login' is assigned a value but never used.","'error' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Navigate' is defined but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'drinkid' is assigned a value but never used.","'setDrinkid' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'data' is assigned a value but never used."]