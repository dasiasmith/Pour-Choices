[{"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js":"1","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js":"2","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js":"3","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js":"4","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js":"5","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js":"6","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js":"7","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js":"8","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js":"9","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Navi.js":"10","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js":"11","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js":"12","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js":"13","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js":"14","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js":"15","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js":"16","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js":"17","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\cocktailApi.js":"18","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js":"19"},{"size":500,"mtime":1649296760447,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1649296760451,"results":"22","hashOfConfig":"21"},{"size":2114,"mtime":1649794368551,"results":"23","hashOfConfig":"21"},{"size":2302,"mtime":1649774629558,"results":"24","hashOfConfig":"21"},{"size":3113,"mtime":1649774629560,"results":"25","hashOfConfig":"21"},{"size":745,"mtime":1649775998636,"results":"26","hashOfConfig":"21"},{"size":797,"mtime":1649774629559,"results":"27","hashOfConfig":"21"},{"size":3278,"mtime":1649774629561,"results":"28","hashOfConfig":"21"},{"size":3454,"mtime":1649793113993,"results":"29","hashOfConfig":"21"},{"size":2668,"mtime":1649774629560,"results":"30","hashOfConfig":"21"},{"size":1252,"mtime":1649382589216,"results":"31","hashOfConfig":"21"},{"size":1955,"mtime":1649774569101,"results":"32","hashOfConfig":"21"},{"size":949,"mtime":1649774569101,"results":"33","hashOfConfig":"21"},{"size":1043,"mtime":1649774569100,"results":"34","hashOfConfig":"21"},{"size":3271,"mtime":1649774629557,"results":"35","hashOfConfig":"21"},{"size":4073,"mtime":1649793229115,"results":"36","hashOfConfig":"21"},{"size":3259,"mtime":1649789043942,"results":"37","hashOfConfig":"21"},{"size":634,"mtime":1649774629558,"results":"38","hashOfConfig":"21"},{"size":3848,"mtime":1649774569092,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zc2zyy",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js",[],["86","87"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js",["88","89","90"],"import React from \"react\";\n\nimport awayBar from \"../assets/awayBar.jpeg\";\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nexport default function Awaybar(){\n  function getRandomCocktail(){\n      fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n      .then(\n          function(response){\n              if (response.status !== 200){\n                  console.log('Problemo'+ response.status);\n                  return;\n              }\n              response.json().then(function(data) {\n                  // console.log(data);\n                  displayRandomCocktail(data);\n              });\n          }\n      )\n      .catch(function(err) {\n          console.log('Fetch Error :-5', err)\n      })\n  }\n      function displayRandomCocktail(cocktail){\n          console.log(cocktail.drinks[0].strDrink) //Gives just drink name\n\n          let drinkSection = document.querySelector('#drink-section');\n          let drinkName = document.createElement('h2');\n          drinkName.innerHTML = cocktail.drinks[0].strDrink\n\n          drinkSection.appendChild(drinkName)\n\n          let img = document.createElement('img');\n          img.src = cocktail.drinks[0].strDrinkThumb;\n\n          drinkSection.appendChild(img);\n      }\n\n    return(\n        <div>\n            <button onClick={getRandomCocktail}>Click Me</button>\n            <section style={{ color: \"white\" }} id=\"drink-section\"></section>\n        </div>\n        \n    )\n}\n\n\n// Alex\n// const Awaybar = () => {\n//   return (\n//     <div\n//       className=\"flex-column justify-flex-start\"\n//       style={{\n//         backgroundImage: `url(${awayBar})`,\n//         backgroundPosition: \"center\",\n//         backgroundSize: \"cover\",\n//         backgroundRepeat: \"no-repeat\",\n//         width: \"100vw\",\n//         height: \"100vh\",\n//       }}\n//     >\n//       <main className=\"flex-row align-center min-100-vh\">\n//         <header className=\"text-light\">\n//           PourChoices\n//         </header>\n//         <div className=\"col-12 col-lg-12\">\n//           <div className=\"card\">\n//             <div className=\"card-body text-light\">\n//               <p>wordy words</p>\n//             </div>\n//           </div>\n//         </div>\n//       </main>\n//     </div>\n//   );\n// };\n\n// export default Awaybar;","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js",["91"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from '../utils/auth';\nimport logo from '../assets/PCLogo.png';\n\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div\n    className=\"flex-column justify-flex-start\"\n    style={{\n      backgroundImage: `url(${loginBar})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      width: \"100vw\",\n      height: \"100vh\",\n    }}\n  >\n    <main className=\"flex-column justify-center align-center\">\n    <header className=\"text-light mb-5 p-5\"><img src={logo} />\n        <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n          <nav><h5>Sign Up</h5></nav><nav><h5>Logout</h5></nav>\n        </div>\n      </header>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"card\">\n          <h1 className=\"card-header text-dark text-center\">Login</h1>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js",["92"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\n//We should add an if statement, if user is logged in then render option for\n//home or outside bar. If user is not logged in then redirect to login page\n\nconst Home = () => {\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        This is the home page where we'll render the options for home or bar\n      </div>\n      <li className=\"flex-row\">\n        <Link to=\"/homebar\">Homebar</Link>\n      </li>\n      <li className=\"flex-row\">\n        <Link to=\"/awaybar\">Awaybar</Link>\n      </li>\n      <li className=\"flex-row\">\n        <Link to=\"/me\">profile</Link>\n      </li>\n    </main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js",["93"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/PCLogo.png';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div\n    className=\"flex-column justify-flex-start\"\n    style={{\n      backgroundImage: `url(${loginBar})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      width: \"100vw\",\n      height: \"100vh\",\n    }}\n  >\n    <main className=\"flex-column justify-center align-center min-100-vh\">\n    <header className=\"text-light mb-5 p-5\"><img src={logo} />\n        <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n          <nav><h5>Login</h5></nav><nav><h5>Logout</h5></nav>\n        </div>\n      </header>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"card\">\n          <h1 className=\"card-header text-dark text-center\">Sign Up</h1>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js",["94"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Navi.js",["95","96","97","98","99"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\n\nconst Navi = (props) => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div\n      className=\"flex-column justify-flex-start\"\n      style={{\n        backgroundImage: `url(${loginBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n      }}\n    >\n      <header className=\"text-light flex-row justify-center mb-5 p-5\">\n        <img src={logo} />\n        <div className=\"flex-row justify-space-between-lg justify-center align-center\">\n          <nav>\n            <h5>Profile</h5>\n          </nav>\n          <nav>\n            <h5>Logout</h5>\n          </nav>\n        </div>\n      </header>\n      <main className=\"flex-column justify-center align-center\">\n        <div className=\"col-5 text-light\">\n          <div className=\"card float-left w-40\">\n            <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <button\n                className=\"btn btn-block\"\n                style={{ cursor: \"pointer\" }}\n                type=\"submit\"\n              >\n                Home\n              </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"card float-right w-40\">\n            <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <button\n                className=\"btn btn-block\"\n                style={{ cursor: \"pointer\" }}\n                type=\"submit\"\n              >\n                Away\n              </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Navi;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js",["100","101","102"],"import React, { useState, useEffect } from 'react';\nimport randomCocktail from \"./cocktailApi\";\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n\n    const [data, setData] = useState([]);\n    const [list, setList] = useState([]);\n    const [selected, setSelected] = useState([]);\n    const [title, setTitle] = useState([]);\n\n    //get list of ingredients for the user\n    useEffect(() => {\n        fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\")\n            .then(res => res.json())\n            .then(data => {\n                let newData = data.drinks;\n                newData = newData.map(ele => {\n                    const title = ele.strIngredient1;\n                    return { \"title\": title };\n                })\n                setData(newData)\n            });\n    }, []);\n    console.log(\"my selected: \", selected);\n\n    const fetchList = () => {\n        const query = selected.map((element) => element.title).join();\n        console.log('query ===', query);\n        fetch(`https://www.thecocktaildb.com/api/json/v2/9973533/filter.php?i=${query}`)\n            .then(res => res.json())\n            .then(data => {\n                let newData2 = data.drinks\n                console.log(data.drinks);\n                if (newData2.length && newData2 !== 'None Found') {\n                    setList(newData2);\n                } else {\n                    setList([]);\n                }\n            });\n    }\n\n    return (\n        <>\n            <Autocomplete\n                multiple\n                id=\"checkboxes-tags-demo\"\n                options={data}\n                onChange={(e, newValue) => {\n                    setSelected(newValue);\n                    fetchList();\n                }}\n                disableCloseOnSelect\n                getOptionLabel={(option) => option.title}\n                renderOption={(props, option, { selected }) => (\n                    <li {...props}>\n                        <Checkbox\n                            icon={icon}\n                            checkedIcon={checkedIcon}\n                            style={{ marginRight: 8 }}\n                            checked={selected}\n                        />\n                        {option.title}\n                    </li>\n                )}\n                style={{ width: 500 }}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"Checkboxes\" placeholder=\"Favorites\" />\n                )}\n            />\n\n            <div className='row'>\n                {list.length > 0 ? list.map((e) => (\n                    <div key={e.idDrink}>\n                        <p>{e.strDrink}</p>\n                        <img src={e.strDrinkThumb} alt=\"\" width=\"40px\" height=\"40px\" />\n                    </div>\n                )) : (<div><p style={{ color: 'white' }}>no data</p></div>)}\n            </div>\n        </>\n    );\n}\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js",["103"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js",["104","105","106"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\cocktailApi.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js",["107","108"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { UPDATE_RECIPE } from \"../../utils/mutations\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nconst RecipeEditForm = ({ recipeInfo, setIsEdit }) => {\n  // set state\n  const [recipeName, setRecipeName] = useState(recipeInfo.recipeName);\n  const [ingredients, setIngredients] = useState(recipeInfo.ingredients);\n  const [instructions, setInstructions] = useState(recipeInfo.instructions);\n  // add recipe\n  const [updateRecipe, { error }] = useMutation(UPDATE_RECIPE);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await updateRecipe({\n        variables: {\n          recipedId: recipeInfo._id,\n          recipeName,\n          ingredients,\n          instructions,\n        },\n        update(cache, { data: { updateRecipe } }) {\n          const updatedRecipe = {\n            ...updateRecipe,\n            recipeName,\n            ingredients,\n            instructions,\n          };\n          const { me } = cache.readQuery({ query: QUERY_ME });\n          cache.writeQuery({\n            query: QUERY_ME,\n            data: {\n              me: {\n                ...me,\n                recipes: me.recipes.map((recipe) =>\n                  recipe._id === updateRecipe._id ? updatedRecipe : recipe\n                ),\n              },\n            },\n          });\n        },\n      });\n      setRecipeName(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n      setIsEdit(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // based on input type, set state for recipeName, ingredient, instructions\n\n    if (inputType === \"recipeName\") {\n      setRecipeName(inputValue);\n    } else if (inputType === \"ingredients\") {\n      setIngredients(inputValue);\n    } else {\n      setInstructions(inputValue);\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-12 col-lg-9\">\n        <textarea\n          name=\"recipeName\"\n          value={recipeName}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"ingredients\"\n          value={ingredients}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"instructions\"\n          placeholder=\"Here is the instructions\"\n          value={instructions}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n      </div>\n      <div>\n        <button\n          className=\"btn btn-primary btn-block py-3\"\n          onClick={handleFormSubmit}\n        >\n          Update Changes\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeEditForm;\n\n// , {\n//     update(cache, { data: { addRecipe } }) {\n//       try {\n//         const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\n//         cache.writeQuery({\n//           query: QUERY_RECIPES,\n//           data: { recipes: [updateRecipe, ...recipes] },\n//         });\n//       } catch (e) {\n//         console.log(e);\n//       }\n//       // update me object's cache\n//       const { me } = cache.readQuery({ query: QUERY_ME });\n//       cache.writeQuery({\n//         query: QUERY_ME,\n//         data: {\n//           me: {\n//             ...me,\n//             recipes: me.recipes.map((recipe) =>\n//               recipe._id === recipeInfo._id ? updateRecipe : recipe\n//             ),\n//           },\n//         },\n//       });\n//     },\n//   }\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":15},{"ruleId":"113","severity":1,"message":"117","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":19},{"ruleId":"113","severity":1,"message":"118","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":58,"column":45,"nodeType":"121","endLine":58,"endColumn":63},{"ruleId":"113","severity":1,"message":"118","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":54,"column":45,"nodeType":"121","endLine":54,"endColumn":63},{"ruleId":"113","severity":1,"message":"122","line":6,"column":32,"nodeType":"115","messageId":"116","endLine":6,"endColumn":45},{"ruleId":"113","severity":1,"message":"123","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":11,"column":19,"nodeType":"115","messageId":"116","endLine":11,"endColumn":24},{"ruleId":"113","severity":1,"message":"125","line":11,"column":26,"nodeType":"115","messageId":"116","endLine":11,"endColumn":30},{"ruleId":"113","severity":1,"message":"126","line":14,"column":9,"nodeType":"115","messageId":"116","endLine":14,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":57,"column":9,"nodeType":"121","endLine":57,"endColumn":27},{"ruleId":"113","severity":1,"message":"127","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":22},{"ruleId":"113","severity":1,"message":"128","line":17,"column":12,"nodeType":"115","messageId":"116","endLine":17,"endColumn":17},{"ruleId":"113","severity":1,"message":"129","line":17,"column":19,"nodeType":"115","messageId":"116","endLine":17,"endColumn":27},{"ruleId":"113","severity":1,"message":"125","line":37,"column":15,"nodeType":"115","messageId":"116","endLine":37,"endColumn":19},{"ruleId":"113","severity":1,"message":"122","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":23},{"ruleId":"113","severity":1,"message":"124","line":44,"column":26,"nodeType":"115","messageId":"116","endLine":44,"endColumn":31},{"ruleId":"113","severity":1,"message":"125","line":57,"column":15,"nodeType":"115","messageId":"116","endLine":57,"endColumn":19},{"ruleId":"113","severity":1,"message":"124","line":13,"column":26,"nodeType":"115","messageId":"116","endLine":13,"endColumn":31},{"ruleId":"113","severity":1,"message":"125","line":17,"column":15,"nodeType":"115","messageId":"116","endLine":17,"endColumn":19},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'awayBar' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useQuery' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'QUERY_RECIPES' is defined but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'randomCocktail' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]