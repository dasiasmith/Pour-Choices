[{"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js":"1","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js":"2","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js":"3","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js":"4","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js":"5","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js":"6","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js":"7","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js":"8","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js":"9","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js":"10","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js":"11","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js":"12","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js":"13","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js":"14","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js":"15","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js":"16","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js":"17","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\RecipeBook\\RecipeBook.js":"18"},{"size":500,"mtime":1649296760447,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1649296760451,"results":"21","hashOfConfig":"20"},{"size":1991,"mtime":1649976344695,"results":"22","hashOfConfig":"20"},{"size":4308,"mtime":1649979781075,"results":"23","hashOfConfig":"20"},{"size":4946,"mtime":1649982536670,"results":"24","hashOfConfig":"20"},{"size":3951,"mtime":1649981508854,"results":"25","hashOfConfig":"20"},{"size":4978,"mtime":1649981872196,"results":"26","hashOfConfig":"20"},{"size":3368,"mtime":1649976344709,"results":"27","hashOfConfig":"20"},{"size":3917,"mtime":1649982426465,"results":"28","hashOfConfig":"20"},{"size":1252,"mtime":1649803120713,"results":"29","hashOfConfig":"20"},{"size":1043,"mtime":1649812740618,"results":"30","hashOfConfig":"20"},{"size":1955,"mtime":1649803120728,"results":"31","hashOfConfig":"20"},{"size":949,"mtime":1649803120729,"results":"32","hashOfConfig":"20"},{"size":4606,"mtime":1649976344702,"results":"33","hashOfConfig":"20"},{"size":4144,"mtime":1649976344704,"results":"34","hashOfConfig":"20"},{"size":3291,"mtime":1649976344705,"results":"35","hashOfConfig":"20"},{"size":3849,"mtime":1649976344703,"results":"36","hashOfConfig":"20"},{"size":4845,"mtime":1649976344705,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zc2zyy",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\index.js",[],["82","83"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\reportWebVitals.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\App.js",["84"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Homebar from \"./pages/Homebar\";\nimport AwayBar from \"./pages/Awaybar\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport Header from \"./components/Header\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n          {/* <Header /> */}\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/homebar\" element={<Homebar />} />\n              <Route path=\"/awaybar\" element={<AwayBar />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/me\" element={<Profile />} />\n              <Route path=\"/profiles/:username\" element={<Profile />} />\n            </Routes>\n          </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Profile.js",["85","86","87","88"],"import React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nimport { QUERY_USER, QUERY_ME, QUERY_RECIPES } from \"../utils/queries\";\nimport profileBar from \"../assets/profileBar.png\";\nimport RecipeForm from \"../components/RecipeForm\";\nimport RecipeList from \"../components/RecipeList\";\nimport Auth from \"../utils/auth\";\nimport logo from \"../assets/PCLogo.png\";\nimport \"../App\";\n\n// profile\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const logout = (event) => {\n    navigate(\"/\");\n    event.preventDefault();\n    navigate(\"/\");\n    Auth.logout();\n  };\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <div\n        className=\"flex-column justify-flex-start\"\n        style={{\n          backgroundImage: `url(${profileBar})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          width: \"100vw\",\n          height: \"100vh\",\n        }}\n      >\n        <main className=\"flex-row justify-center align-center min-100-vh\">\n          <div className=\"col-12 col-lg-4\">\n            <div className=\"card-error\">\n              <div className=\"card-body text-light text-center\">\n                <h4>\n                  You need to be logged in to see this!\n                  <br></br>\n                  <a href=\"./signup\">Sign up</a>\n                  {\" or \"}\n                  <a href=\"/login\">log in</a>!\n                </h4>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\"\"\n      style={{\n        backgroundImage: `url(${profileBar})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100vw\",\n        height: \"100vh\",\n        overflowX: \"scroll\",\n      }}\n    >\n      <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n          <a href=\"/\">\n            <img src={logo} />\n          </a>\n        </div>\n        {Auth.loggedIn() && (\n          <div className=\"flex-row justify-center align-center\">\n            <h5\n              className=\"m-2 decoration-none text-light\"\n              style={{ cursor: \"pointer\" }}\n              onClick={logout}\n            >\n              Log out\n            </h5>\n          </div>\n        )}\n      </header>\n      {/* <Link to=\"/\">Homepage</Link> */}\n      <div className=\"flex-container\">\n        <div className=\"flex-row flex-child justify-center text-light\">\n          <h2 className=\"col-12 col-md-10 text-light p-3 mb-0\">\n            <h3> Viewing {Auth.getProfile().data.username}'s recipes</h3>\n          </h2>\n          <div className=\"col-12 col-md-10\">\n            <RecipeList\n              recipes={user.recipes}\n              title={`${user.username}'s recipes...`}\n              showTitle={false}\n              showUsername={false}\n            />\n          </div>\n        </div>\n\n        {/* <div className=\"profile col-md-10\">\n          <p>&#128516;</p>\n          <div class=\"card-body\">\n            <p class=\"card-text\">About Me</p>\n          </div>\n        </div>\n        <div className=\"user-recipe\">recipe goes here</div> */}\n        {/* <div className=\"col-12 col-md-10 mb-5\"></div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n            style={{ border: \"1px dotted #1a1a1a\" }}\n          ></div>\n        )} */}\n        {!userParam && (\n          <div\n            className=\"flex-child col-12 col-md-10 mb-3 p-3\"\n            // style={{ border: \"1px dotted #1a1a1a\" }}\n          >\n            <RecipeForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Home.js",["89","90","91","92","93","94","95"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Homebar.js",["96","97","98","99","100","101","102","103"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Awaybar.js",["104","105","106","107","108","109","110","111"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Signup.js",["112"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/PCLogo.png';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport loginBar from \"../assets/loginBar.jpeg\";\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div\n    className=\"flex-column justify-flex-start\"\n    style={{\n      backgroundImage: `url(${loginBar})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      width: \"100vw\",\n      height: \"100vh\",\n    }}\n  >\n    <main className=\"flex-column justify-center align-center\">\n    <header className=\"text-light flex-column align-center mb-5 p-5\">\n        <div className=\"flex-row justify-center\">\n        <img src={logo}/>\n        </div>\n          <div className=\"flex-row\">\n            <Link className=\"m-2 decoration-none text-light\" to=\"/login\">\n              <h5>Log in</h5>\n            </Link>\n          </div>\n      </header>\n      <div className=\"col-12 col-lg-4\">\n        <div className=\"card\">\n          <h1 className=\"card-header text-dark text-center\">Sign Up</h1>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\Login.js",["113","114"],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\auth.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\mutations.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\utils\\queries.js",[],"C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\Homebar\\Autocomplete.js",["115","116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport default function CheckboxesTags() {\n  const [data, setData] = useState([]);\n  const [drinkid, setDrinkid] = useState([]);\n  const [list, setList] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [singleDrink, setSingleDrink] = useState([])\n\n  //get list of ingredients for the user\n  useEffect(() => {\n    fetch(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\")\n      .then((res) => res.json())\n      .then((data) => {\n        let newData = data.drinks;\n        newData = newData.map((ele) => {\n          const title = ele.strIngredient1;\n          return { title: title };\n        });\n        setData(newData);\n      });\n  }, []);\n  console.log(\"my selected: \", selected);\n  //fetch a list based on the selected ingredients\n  const fetchList = () => {\n    const query = selected.map((element) => element.title).join();\n    console.log(\"query ===\", query);\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v2/9973533/filter.php?i=${query}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        let newData2 = data.drinks;\n        console.log(newData2);\n        if (newData2.length && newData2 !== \"None Found\") {\n          setList(newData2);\n        } else {\n          setList([]);\n        }\n      });\n  };\n  console.log(list);\n  const fetchRecipe = (id) => {\n    fetch(\n      `https://www.thecocktaildb.com/api/json/v2/9973533/lookup.php?i=${id}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setIsFetched(true)\n        let newData3 = data.drinks[0];\n        setSingleDrink(newData3)\n        //console.log(newData3);\n      });\n  };\n\n  return (\n    <>\n      <Autocomplete\n        multiple\n        id=\"checkboxes-tags-demo\"\n        options={data}\n        onChange={(e, newValue) => {\n          console.log(newValue);\n          setSelected(newValue);\n        }}\n        onClose={(e) => {\n          fetchList();\n        }}\n        disableCloseOnSelect\n        getOptionLabel={(option) => option.title}\n        renderOption={(props, option, { selected }) => (\n          <li {...props}>\n            <Checkbox\n              icon={icon}\n              checkedIcon={checkedIcon}\n              style={{ marginRight: 8 }}\n              checked={selected}\n            />\n            {option.title}\n          </li>\n        )}\n        style={{ width: 500, background: 'white' }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Checkboxes\" placeholder=\"Favorites\" />\n        )}\n      />\n\n      <div className=\"row\">\n        {list.length > 0 ? (\n          list.map((e) => (\n            <div key={e.idDrink} style={{ cursor: 'pointer'}}>\n              <p style={{color: 'white'}}> {e.strDrink} </p>\n                <img\n                  src={e.strDrinkThumb}\n                  onClick={() => fetchRecipe(e.idDrink)}\n                  alt=\"alt\"\n                  width=\"40px\"\n                  height=\"40px\"\n                />\n             \n            </div>\n          ))\n          \n        ) : (\n          <div>\n            <p style={{ color: \"white\" }}>no data</p>\n          </div>\n        )}\n      </div>\n      {\n        isFetched && <div style={{color: 'white'}}>\n        <h2>Ingredients</h2>\n        <ul>\n          <li>{ singleDrink.strIngredient1 } : { singleDrink.strMeasure1 }</li>\n          <li>{ singleDrink.strIngredient2 } : { singleDrink.strMeasure2 }</li>\n          <li>{ singleDrink.strIngredient3 } : { singleDrink.strMeasure3 }</li>\n          <li>{ singleDrink.strIngredient4 } : { singleDrink.strMeasure4 }</li>\n          <li>{ singleDrink.strIngredient5 } : { singleDrink.strMeasure5 }</li>\n          <li>{ singleDrink.strIngredient6 } : { singleDrink.strMeasure6 }</li>\n          <li>{ singleDrink.strIngredient7 } : { singleDrink.strMeasure7 }</li>\n          <li>{ singleDrink.strIngredient8 } : { singleDrink.strMeasure8 }</li>\n          <li>{ singleDrink.strIngredient9 } : { singleDrink.strMeasure9 }</li>\n        </ul>\n        <p><b>Instructions:</b> { singleDrink.strInstructions }</p>\n      </div>\n      } \n    </>\n  );\n}\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeForm\\index.js",["119"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { ADD_RECIPE } from \"../../utils/mutations\";\nimport { QUERY_RECIPES, QUERY_ME } from \"../../utils/queries\";\n\nimport Auth from \"../../utils/auth\";\nconst RecipeForm = () => {\n  // set state\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  // add recipe\n  const [addRecipe, { error }] = useMutation(ADD_RECIPE, {\n    update(cache, { data: { addRecipe } }) {\n      try {\n        const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\n        cache.writeQuery({\n          query: QUERY_RECIPES,\n          data: { recipes: [addRecipe, ...recipes] },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, recipes: [...me.recipes, addRecipe] } },\n      });\n    },\n  });\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addRecipe({\n        variables: {\n          recipeName,\n          ingredients,\n          instructions,\n          recipeAuthor: Auth.getProfile().data.username,\n        },\n      });\n      setRecipeName(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // based on input type, set state for recipeName, ingredient, instructions\n\n    if (inputType === \"recipeName\") {\n      setRecipeName(inputValue);\n    } else if (inputType === \"ingredients\") {\n      setIngredients(inputValue);\n    } else {\n      setInstructions(inputValue);\n    }\n  };\n  return (\n    <div>\n      <h3 className=\"text-light mx-3\">Create your own recipe?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-space-between-md\"\n            onSubmit={handleFormSubmit}\n          >\n            <div style={{ width: \"100%\" }}>\n              <div className=\"col-12 col-lg-11\">\n                <textarea\n                  name=\"recipeName\"\n                  placeholder=\"Here is the name of recipe\"\n                  value={recipeName}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n                <textarea\n                  name=\"ingredients\"\n                  placeholder=\"Here are the ingredients\"\n                  value={ingredients}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n                <textarea\n                  name=\"instructions\"\n                  placeholder=\"Here are the instructions\"\n                  value={instructions}\n                  className=\"form-input w-100\"\n                  style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                  onChange={handleInputChange}\n                ></textarea>\n              </div>\n\n              <div className=\"col-12 col-lg-3\">\n                <button\n                  className=\"btn btn-sm btn-dark py-3\"\n                  style={{ cursor: \"pointer\" }}\n                  type=\"submit\"\n                >\n                  Add Recipe\n                </button>\n              </div>\n              {error && (\n                <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to create your recipe. Please{\" \"}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeForm;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeList\\index.js",["120","121","122"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { REMOVE_RECIPE } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport { QUERY_RECIPES, QUERY_ME } from \"../../utils/queries\";\nimport RecipeEditForm from \"../RecipeEditForm\";\n\nconst CardBody = ({ recipe, handleEditButton, handleDeleteRecipe }) => (\n  <div className=\"card-body p-2\">\n    <p>{recipe.recipeName}</p>\n    <p>ingredients: {recipe.ingredients}</p>\n    <p>instructions: {recipe.instructions}</p>\n    <div\n      style={{\n        display: \"flex\",\n        width: \"50%\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <button\n        className=\"btn btn-info float-right\"\n        onClick={() => handleEditButton(recipe._id)}\n      >\n        Edit Recipe\n      </button>\n      <button\n        className=\"btn btn-danger float-right\"\n        onClick={() => handleDeleteRecipe(recipe._id)}\n      >\n        Delete Recipe\n      </button>\n    </div>\n  </div>\n);\n\nconst RecipeList = ({\n  recipes,\n  title,\n  showTitle = true,\n  showUsername = true,\n}) => {\n  const [isEdit, setIsEdit] = useState();\n  const [removeRecipe, { error }] = useMutation(REMOVE_RECIPE);\n  if (!recipes.length) {\n    return <h1>No Recipes Yet</h1>;\n  }\n\n  const handleDeleteRecipe = async (recipeId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeRecipe({\n        variables: { recipeId },\n        update(cache, { data: { removeRecipe } }) {\n          const { me } = cache.readQuery({ query: QUERY_ME });\n          cache.writeQuery({\n            query: QUERY_ME,\n            data: {\n              me: {\n                ...me,\n                recipes: me.recipes.filter(\n                  (recipe) => recipe._id !== removeRecipe._id\n                ),\n              },\n            },\n          });\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      {showTitle && <h3>{title}</h3>}\n      {recipes &&\n        recipes.map((recipe) => (\n          <div key={recipe._id} className=\"card mb-3\">\n            <h4 className=\"card-header text-dark p-2 m-0\">\n              {showUsername ? (\n                <Link\n                  className=\"text-light\"\n                  to={`/profiles/${recipe.recipeAuthor}`}\n                >\n                  {recipe.recipeAuthor} <br />\n                  <span style={{ fontSize: \"1.25rem\" }}>\n                    created this recipe on {recipe.createdAt}\n                  </span>\n                </Link>\n              ) : (\n                <>\n                  <span style={{ fontSize: \"1.25rem\" }}>\n                    created this recipe on {recipe.createdAt}\n                  </span>\n                </>\n              )}\n            </h4>\n            {isEdit === recipe._id ? (\n              <RecipeEditForm recipeInfo={recipe} setIsEdit={setIsEdit} />\n            ) : (\n              <CardBody\n                recipe={recipe}\n                handleEditButton={() => setIsEdit(recipe._id)}\n                handleDeleteRecipe={handleDeleteRecipe}\n              />\n            )}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default RecipeList;\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\components\\RecipeEditForm\\index.js",["123","124"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { UPDATE_RECIPE } from \"../../utils/mutations\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nconst RecipeEditForm = ({ recipeInfo, setIsEdit }) => {\n  // set state\n  const [recipeName, setRecipeName] = useState(recipeInfo.recipeName);\n  const [ingredients, setIngredients] = useState(recipeInfo.ingredients);\n  const [instructions, setInstructions] = useState(recipeInfo.instructions);\n  // add recipe\n  const [updateRecipe, { error }] = useMutation(UPDATE_RECIPE);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await updateRecipe({\n        variables: {\n          recipedId: recipeInfo._id,\n          recipeName,\n          ingredients,\n          instructions,\n        },\n        update(cache, { data: { updateRecipe } }) {\n          const updatedRecipe = {\n            ...updateRecipe,\n            recipeName,\n            ingredients,\n            instructions,\n          };\n          const { me } = cache.readQuery({ query: QUERY_ME });\n          cache.writeQuery({\n            query: QUERY_ME,\n            data: {\n              me: {\n                ...me,\n                recipes: me.recipes.map((recipe) =>\n                  recipe._id === updateRecipe._id ? updatedRecipe : recipe\n                ),\n              },\n            },\n          });\n        },\n      });\n      setRecipeName(\"\");\n      setIngredients(\"\");\n      setInstructions(\"\");\n      setIsEdit(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    const inputType = target.name;\n    const inputValue = target.value;\n    // based on input type, set state for recipeName, ingredient, instructions\n\n    if (inputType === \"recipeName\") {\n      setRecipeName(inputValue);\n    } else if (inputType === \"ingredients\") {\n      setIngredients(inputValue);\n    } else {\n      setInstructions(inputValue);\n    }\n  };\n  return (\n    <div>\n      <div className=\"col-12 col-lg-9\">\n        <textarea\n          name=\"recipeName\"\n          value={recipeName}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"ingredients\"\n          value={ingredients}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n        <textarea\n          name=\"instructions\"\n          placeholder=\"Here is the instructions\"\n          value={instructions}\n          className=\"form-input w-100\"\n          style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n          onChange={handleInputChange}\n        ></textarea>\n      </div>\n      <div>\n        <button\n          className=\"btn btn-primary btn-block py-3 \"\n          onClick={handleFormSubmit}\n        >\n          Update Changes\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeEditForm;\n\n// , {\n//     update(cache, { data: { addRecipe } }) {\n//       try {\n//         const { recipes } = cache.readQuery({ query: QUERY_RECIPES });\n//         cache.writeQuery({\n//           query: QUERY_RECIPES,\n//           data: { recipes: [updateRecipe, ...recipes] },\n//         });\n//       } catch (e) {\n//         console.log(e);\n//       }\n//       // update me object's cache\n//       const { me } = cache.readQuery({ query: QUERY_ME });\n//       cache.writeQuery({\n//         query: QUERY_ME,\n//         data: {\n//           me: {\n//             ...me,\n//             recipes: me.recipes.map((recipe) =>\n//               recipe._id === recipeInfo._id ? updateRecipe : recipe\n//             ),\n//           },\n//         },\n//       });\n//     },\n//   }\n","C:\\Users\\16782\\GT_bootcamp\\Pour-Choices\\client\\src\\pages\\RecipeBook\\RecipeBook.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":16,"column":8,"nodeType":"131","messageId":"132","endLine":16,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"134","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":21},{"ruleId":"129","severity":1,"message":"135","line":9,"column":32,"nodeType":"131","messageId":"132","endLine":9,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":90,"column":13,"nodeType":"138","endLine":90,"endColumn":31},{"ruleId":"129","severity":1,"message":"135","line":3,"column":32,"nodeType":"131","messageId":"132","endLine":3,"endColumn":45},{"ruleId":"129","severity":1,"message":"134","line":11,"column":10,"nodeType":"131","messageId":"132","endLine":11,"endColumn":21},{"ruleId":"129","severity":1,"message":"139","line":17,"column":11,"nodeType":"131","messageId":"132","endLine":17,"endColumn":18},{"ruleId":"129","severity":1,"message":"140","line":23,"column":10,"nodeType":"131","messageId":"132","endLine":23,"endColumn":15},{"ruleId":"129","severity":1,"message":"141","line":23,"column":19,"nodeType":"131","messageId":"132","endLine":23,"endColumn":24},{"ruleId":"129","severity":1,"message":"142","line":26,"column":9,"nodeType":"131","messageId":"132","endLine":26,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":107,"column":11,"nodeType":"138","endLine":107,"endColumn":29},{"ruleId":"129","severity":1,"message":"143","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":18},{"ruleId":"129","severity":1,"message":"135","line":5,"column":32,"nodeType":"131","messageId":"132","endLine":5,"endColumn":45},{"ruleId":"129","severity":1,"message":"139","line":20,"column":11,"nodeType":"131","messageId":"132","endLine":20,"endColumn":18},{"ruleId":"129","severity":1,"message":"144","line":25,"column":10,"nodeType":"131","messageId":"132","endLine":25,"endColumn":19},{"ruleId":"129","severity":1,"message":"145","line":25,"column":21,"nodeType":"131","messageId":"132","endLine":25,"endColumn":33},{"ruleId":"129","severity":1,"message":"140","line":26,"column":10,"nodeType":"131","messageId":"132","endLine":26,"endColumn":15},{"ruleId":"129","severity":1,"message":"141","line":26,"column":19,"nodeType":"131","messageId":"132","endLine":26,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":80,"column":15,"nodeType":"138","endLine":80,"endColumn":33},{"ruleId":"129","severity":1,"message":"143","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":18},{"ruleId":"129","severity":1,"message":"135","line":5,"column":32,"nodeType":"131","messageId":"132","endLine":5,"endColumn":45},{"ruleId":"129","severity":1,"message":"139","line":17,"column":11,"nodeType":"131","messageId":"132","endLine":17,"endColumn":18},{"ruleId":"129","severity":1,"message":"144","line":22,"column":10,"nodeType":"131","messageId":"132","endLine":22,"endColumn":19},{"ruleId":"129","severity":1,"message":"145","line":22,"column":21,"nodeType":"131","messageId":"132","endLine":22,"endColumn":33},{"ruleId":"129","severity":1,"message":"140","line":23,"column":10,"nodeType":"131","messageId":"132","endLine":23,"endColumn":15},{"ruleId":"129","severity":1,"message":"141","line":23,"column":19,"nodeType":"131","messageId":"132","endLine":23,"endColumn":24},{"ruleId":"136","severity":1,"message":"137","line":77,"column":15,"nodeType":"138","endLine":77,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":56,"column":9,"nodeType":"138","endLine":56,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":67,"column":13,"nodeType":"138","endLine":67,"endColumn":31},{"ruleId":"129","severity":1,"message":"146","line":13,"column":10,"nodeType":"131","messageId":"132","endLine":13,"endColumn":17},{"ruleId":"129","severity":1,"message":"147","line":13,"column":19,"nodeType":"131","messageId":"132","endLine":13,"endColumn":29},{"ruleId":"129","severity":1,"message":"148","line":16,"column":10,"nodeType":"131","messageId":"132","endLine":16,"endColumn":15},{"ruleId":"129","severity":1,"message":"149","line":16,"column":17,"nodeType":"131","messageId":"132","endLine":16,"endColumn":25},{"ruleId":"129","severity":1,"message":"150","line":37,"column":15,"nodeType":"131","messageId":"132","endLine":37,"endColumn":19},{"ruleId":"129","severity":1,"message":"135","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":23},{"ruleId":"129","severity":1,"message":"141","line":44,"column":26,"nodeType":"131","messageId":"132","endLine":44,"endColumn":31},{"ruleId":"129","severity":1,"message":"150","line":57,"column":15,"nodeType":"131","messageId":"132","endLine":57,"endColumn":19},{"ruleId":"129","severity":1,"message":"141","line":13,"column":26,"nodeType":"131","messageId":"132","endLine":13,"endColumn":31},{"ruleId":"129","severity":1,"message":"150","line":17,"column":15,"nodeType":"131","messageId":"132","endLine":17,"endColumn":19},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useLocation' is defined but never used.","'QUERY_RECIPES' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","'login' is assigned a value but never used.","'error' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Navigate' is defined but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'drinkid' is assigned a value but never used.","'setDrinkid' is assigned a value but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]